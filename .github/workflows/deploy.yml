name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Create .env file for backend
      - name: Create .env file for backend
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./api/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ./api/.env
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> ./api/.env
          echo "ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}" >> ./api/.env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> ./api/.env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> ./api/.env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> ./api/.env

      # Create .env file for frontend
      - name: Create .env file for frontend
        run: |
          echo "VITE_BACKEND_BASE_URL=${{ secrets.VITE_BACKEND_BASE_URL }}" >> ./frontend/.env
          echo "VITE_SOCKET_ADDRESS=${{ secrets.VITE_SOCKET_ADDRESS }}" >> ./frontend/.env
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" >> ./frontend/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "Logging in to Amazon ECR"
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 545009847664.dkr.ecr.eu-north-1.amazonaws.com

      - name: Build and push Docker images
        env:
          AWS_REGION: eu-north-1
        run: |
          echo "Building and pushing backend image"
          docker build -t realestate-backend:latest -f ./api/Dockerfile ./api
          docker tag realestate-backend:latest 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-backend:latest
          docker tag realestate-backend:latest 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-backend:latest
          docker push 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-backend:latest
          docker push 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-backend:latest

          echo "Building and pushing frontend image"
          docker build -t realestate-frontend:latest -f ./frontend/Dockerfile ./frontend
          docker tag realestate-frontend:latest 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-frontend:latest
          docker tag realestate-frontend:latest 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-frontend:latest
          docker push 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-frontend:latest
          docker push 545009847664.dkr.ecr.eu-north-1.amazonaws.com/realestate-frontend:latest

      - name: Deploy to EC2
        run: |
          echo "Deploying to EC2"
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem  # Set proper permissions for the SSH key
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@51.21.147.165 << 'EOF'
          # Re-authenticate with ECR
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 545009847664.dkr.ecr.eu-north-1.amazonaws.com
          cd realestate-full/
          docker-compose down
          docker-compose up -d --build
          EOF
